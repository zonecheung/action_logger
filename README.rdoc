= ActionLogger

== Install

Add this to your Gemfile:

  gem 'action_logger', "~> 3.0.0", :git => "https://github.com/zonecheung/action_logger.git"

To create the action_logs table after the gem is installed:

  rails generate action_logger_migration
  rake db:migrate

In application_controller.rb:

  include ActionLogger::Base
  log_request

Add these to your config/routes.rb if you wish view the action logs in the browser:

  resources :action_logs, :only => [:index, :show, :destroy] do
    delete :destroy_selected, :on => :collection
  end

If you want to authenticate the user using existing mechanism, just add this method to your application_controller.rb:

  private

  def action_logs_authentication
    # Replace with your own code.
    redirect_to home_url unless current_user && current_user.admin?
  end

== Example

In your controller:

  # Logs only POST call.
  before_filter :log_current_request_action,
                :if => Proc.new { |controller| controller.request.method == "POST" }

  # Skip logging for current controller, in case you put the code above in application_controller.rb.
  skip_before_filter :log_current_request_action

New in version 3.0.1, added a rake task to dump the action logs in YAML format:

  rake action_logger:dump
  
  Available options:
  
    start_date            format: 'yyyy-mm-dd'
    end_date              format: 'yyyy-mm-dd'
    start_time            format: 'yyyy-mm-dd HH:MM:SS'
    end_time              format: 'yyyy-mm-dd HH:MM:SS'
    method                available options: GET or POST
    user_id               integer
    filename              local or S3 filename with path
    s3_access_key_id      S3 Access Key ID
    s3_secret_access_key  S3 Secret Access Key
    s3_bucket             S3 Bucket Name

Copyright (c) 2011 John Tjanaka, released under the MIT license
